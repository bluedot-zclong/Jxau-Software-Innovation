<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.jxau.dao.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="cn.edu.jxau.common.entity.Student">
    <id column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="academy" jdbcType="VARCHAR" property="academy" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="student_number" jdbcType="INTEGER" property="studentNumber" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    student_id, student_name, `password`, academy, classes, student_number, `type`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="student_id" keyProperty="studentId" parameterType="cn.edu.jxau.common.entity.Student" useGeneratedKeys="true">
    insert into student (student_name, `password`, academy, 
      classes, student_number, `type`
      )
    values (#{studentName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{academy,jdbcType=VARCHAR}, 
      #{classes,jdbcType=VARCHAR}, #{studentNumber,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="student_id" keyProperty="studentId" parameterType="cn.edu.jxau.common.entity.Student" useGeneratedKeys="true">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentName != null">
        student_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="academy != null">
        academy,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="studentNumber != null">
        student_number,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="studentNumber != null">
        #{studentNumber,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.jxau.common.entity.Student">
    update student
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="studentNumber != null">
        student_number = #{studentNumber,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.jxau.common.entity.Student">
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      student_number = #{studentNumber,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
  
  <!-- 根据学号查询用户信息 -->
  <select id="selectBySid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_number = #{studentNumber,jdbcType=INTEGER}
  </select>
</mapper>